#!/bin/bash

APPID=24358ee068d1f33b66181473b2f04159
mode=json
flag=0

q=$1
units=$2
forecast=$3

# This bit of logic is to check if the user has the "origin" and "now" flags set
if [[ ${q} == "-o"  ]] && [[ ${forecast} == "-n" ]];
then
	
	myIP=$(curl -s "https://ipinfo.io/ip")
	geoInfo=$(curl -s "https://ipinfo.io/${myIP}/geo")
	
	city=$(jq '.city' <<< ${geoInfo} | tr -d '"')
	country=$(jq '.country' <<< ${geoInfo} | tr -d '"')
	zip=$(jq '.postal' <<< ${geoInfo} | tr -d '"')
		
	echo "Current Temperature in ${city}, ${country}"

	if [[ ${units} == "-c" ]];
	then

		units=metric
		weatherURL="https://api.openweathermap.org/data/2.5/weather?zip=${zip},${country}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°C"
		
	elif [[ ${units} == "-f" ]];
	then

		units=imperial
		weatherURL="https://api.openweathermap.org/data/2.5/weather?zip=${zip},${country}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°F"
	
	elif [[ ${units} == "" ]];
	then
				
		weatherURL="https://api.openweathermap.org/data/2.5/weather?zip=${zip},${country}&mode=${mode}&APPID=${APPID}"
		ending=" K"	
	
	fi

	flag=1


# This bit of logic is to check if the user has the "now" flag set (assuming that they have provided the city and 2-letter country code)
elif [[ ${forecast} == "-n" ]];
then
	
	echo "Current Temperature in ${q}"

	if [[ ${units} == "-c" ]];
	then

		units=metric
		weatherURL="https://api.openweathermap.org/data/2.5/weather?q=${q}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°C"

	elif [[ ${units} == "-f" ]];
	then
		
		units=imperial
		weatherURL="https://api.openweathermap.org/data/2.5/weather?q=${q}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°F"

	else
		
		weatherURL="https://api.openweathermap.org/data/2.5/weather?q=${q}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending=" K"	

	fi
	
	flag=1

# This bit of logic is to check if the user has the "origin" flag set and the "5-day/3-hour forecast" flag set			
elif [[ ${q} == "-o"  ]] && [[ ${forecast} == "-m" ]];
then
	
	myIP=$(curl -s "https://ipinfo.io/ip")
	geoInfo=$(curl -s "https://ipinfo.io/${myIP}/geo")
	
	city=$(jq '.city' <<< ${geoInfo} | tr -d '"')
	country=$(jq '.country' <<< ${geoInfo} | tr -d '"')
	zip=$(jq '.postal' <<< ${geoInfo} | tr -d '"')
	
	echo "Current Temperature in ${city}, ${country}"

	if [[ ${units} == "-c" ]];
	then
		
		units=metric
		weatherURL="https://api.openweathermap.org/data/2.5/forecast?zip=${zip},${country}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°C"
		
	elif [[ ${units} == "-f" ]];
	then

		units=imperial
		weatherURL="https://api.openweathermap.org/data/2.5/forecast?zip=${zip},${country}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°F"
	
	else
		
		weatherURL="https://api.openweathermap.org/data/2.5/forecast?zip=${zip},${country}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending=" K"
	
	fi

	flag=2

# This bit of logic is to check if the user has the "5-day/3-hour forecast" flag set (assuming that they have provided the city and 2-letter country code)
elif [[ ${forecast} == "-m" ]];
then
	
	echo "Current Temperature in ${q}"

	if [[ ${units} == "-c" ]];
	then

		units=metric
		weatherURL="https://api.openweathermap.org/data/2.5/forecast?q${q}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°C"

	elif [[ ${units} == "-f" ]];
	then
		
		units=imperial
		weatherURL="https://api.openweathermap.org/data/2.5/forecast?q=${q}&units=${units}&mode=${mode}&APPID=${APPID}"
		ending="°F"

	else
		
		weatherURL="https://api.openweathermap.org/data/2.5/weather?q=${q}&mode=${mode}&APPID=${APPID}"
		ending=" K"
	fi

	flag=2

fi

# Flag check
if [[ ${flag} -eq 0 ]];
then

	echo "Some error has occured"

elif [[ ${flag} -eq 1 ]];
then

	weatherInfo=$(curl -s ${weatherURL})
	temp=$(jq '.main.temp' <<< ${weatherInfo})
	descrp=$(jq '.weather[0].description' <<< ${weatherInfo} | tr -d '"')
		
	echo ${temp}${ending}
	echo ${descrp}

elif [[ ${flag} -eq 2 ]];
then
	
	mainDateTime=$(curl -s ${weatherURL} | jq '.list[0].dt_txt' | tr -d '"')
	mainDateTime=${mainDateTime:0:10}
	echo ----------${mainDateTime}----------
	echo
	
	#12:19 for time
	curl -s ${weatherURL} | jq -c '.list[]' | while read forecastInfo; do
		dateTime=$(jq '.dt_txt' <<< ${forecastInfo} | tr -d '"')
		
		if [[ ${mainDateTime} != ${dateTime:0:10} ]]; 
		then
			mainDateTime=${dateTime:0:10}
			echo ----------${mainDateTime}----------
			echo
		fi
			
		temp=$(jq '.main.temp' <<< ${forecastInfo})
		descrp=$(jq '.weather[0].description' <<< ${forecastInfo} | tr -d '"')
	
		echo "${dateTime:11:19}    |	${temp}${ending} 	|	${descrp}"
		echo

	done

fi	
